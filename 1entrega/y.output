Estado 12 conflictos: 9 desplazamiento(s)/reducción(ones)
Estado 43 conflictos: 9 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: prg_ $end

    1 prg_: prg

    2 prg: bloq
    3    | prg bloq

    4 bloq: flowcontr
    5     | sent
    6     | bloq flowcontr
    7     | bloq sent

    8 flowcontr: IF conds LL_ABR bloq LL_CRR ELSE LL_ABR bloq LL_CRR
    9          | IF conds LL_ABR bloq LL_CRR
   10          | WHILE conds LL_ABR bloq LL_CRR

   11 conds: cond
   12      | conds unionlog cond

   13 unionlog: AND
   14         | OR

   15 cond: NOT cond
   16     | PR_ABR cond PR_CRR
   17     | operando oplog operando

   18 oplog: EQ
   19      | NEQ
   20      | LT
   21      | LEQ
   22      | GT
   23      | GEQ

   24 sent: decl endstmt
   25     | assg endstmt
   26     | iostmt endstmt
   27     | endstmt

   28 endstmt: END_STMT
   29        | NL

   30 decl: VAR lista_ids AS CR_ABR tipos CR_CRR
   31     | CONST_NOMBRE ID ASIGN CONST_INT
   32     | CONST_NOMBRE ID ASIGN CONST_R
   33     | CONST_NOMBRE ID ASIGN STR

   34 lista_ids: CR_ABR ids CR_CRR

   35 ids: ID
   36    | ids COMA ID

   37 tipos: tipo
   38      | tipos COMA tipo

   39 tipo: REAL
   40     | STRING_T
   41     | INT

   42 assg: left ASIGN assg
   43     | left ASIGN right

   44 left: ID

   45 right: expr
   46      | str_const

   47 str_const: STR

   48 expr: expr arth_opr termino
   49     | termino

   50 termino: PR_ABR expr PR_CRR
   51        | llong
   52        | ID
   53        | const_num

   54 const_num: CONST_R
   55          | CONST_INT

   56 arth_opr: SUM
   57         | MIN
   58         | MULT
   59         | DIV

   60 llong: LEN PR_ABR lista_ids PR_CRR
   61      | LEN PR_ABR lista_const PR_CRR

   62 lista_const: CR_ABR constantes CR_CRR

   63 constantes: constante
   64           | constantes COMA constante

   65 constante: const_num
   66          | str_const

   67 iostmt: PRINT operando
   68       | GET ID

   69 operando: expr
   70         | str_const


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 31 32 33 35 36 44 52 68
LL_ABR (259) 8 9 10
LL_CRR (260) 8 9 10
CR_ABR (261) 30 34 62
CR_CRR (262) 30 34 62
PR_ABR (263) 16 50 60 61
PR_CRR (264) 16 50 60 61
CONST_INT (265) 31 55
CONST_R (266) 32 54
STR (267) 33 47
SUM (268) 56
MIN (269) 57
DIV (270) 59
MULT (271) 58
EQ (272) 18
NEQ (273) 19
LT (274) 20
LEQ (275) 21
GT (276) 22
GEQ (277) 23
NOT (278) 15
AND (279) 13
OR (280) 14
IF (281) 8 9
ELSE (282) 8
WHILE (283) 10
ASIGN (284) 31 32 33 42 43
VAR (285) 30
AS (286) 30
COMA (287) 36 38 64
INT (288) 41
REAL (289) 39
STRING_T (290) 40
END_STMT (291) 28
NL (292) 29
GET (293) 68
PRINT (294) 67
LEN (295) 60 61
CONST_NOMBRE (296) 31 32 33


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
prg_ (43)
    en la izquierda: 1, en la derecha: 0
prg (44)
    en la izquierda: 2 3, en la derecha: 1 3
bloq (45)
    en la izquierda: 4 5 6 7, en la derecha: 2 3 6 7 8 9 10
flowcontr (46)
    en la izquierda: 8 9 10, en la derecha: 4 6
conds (47)
    en la izquierda: 11 12, en la derecha: 8 9 10 12
unionlog (48)
    en la izquierda: 13 14, en la derecha: 12
cond (49)
    en la izquierda: 15 16 17, en la derecha: 11 12 15 16
oplog (50)
    en la izquierda: 18 19 20 21 22 23, en la derecha: 17
sent (51)
    en la izquierda: 24 25 26 27, en la derecha: 5 7
endstmt (52)
    en la izquierda: 28 29, en la derecha: 24 25 26 27
decl (53)
    en la izquierda: 30 31 32 33, en la derecha: 24
lista_ids (54)
    en la izquierda: 34, en la derecha: 30 60
ids (55)
    en la izquierda: 35 36, en la derecha: 34 36
tipos (56)
    en la izquierda: 37 38, en la derecha: 30 38
tipo (57)
    en la izquierda: 39 40 41, en la derecha: 37 38
assg (58)
    en la izquierda: 42 43, en la derecha: 25 42
left (59)
    en la izquierda: 44, en la derecha: 42 43
right (60)
    en la izquierda: 45 46, en la derecha: 43
str_const (61)
    en la izquierda: 47, en la derecha: 46 66 70
expr (62)
    en la izquierda: 48 49, en la derecha: 45 48 50 69
termino (63)
    en la izquierda: 50 51 52 53, en la derecha: 48 49
const_num (64)
    en la izquierda: 54 55, en la derecha: 53 65
arth_opr (65)
    en la izquierda: 56 57 58 59, en la derecha: 48
llong (66)
    en la izquierda: 60 61, en la derecha: 51
lista_const (67)
    en la izquierda: 62, en la derecha: 61
constantes (68)
    en la izquierda: 63 64, en la derecha: 62 64
constante (69)
    en la izquierda: 65 66, en la derecha: 63 64
iostmt (70)
    en la izquierda: 67 68, en la derecha: 26
operando (71)
    en la izquierda: 69 70, en la derecha: 17 67


estado 0

    0 $accept: . prg_ $end

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    prg_       ir al estado 10
    prg        ir al estado 11
    bloq       ir al estado 12
    flowcontr  ir al estado 13
    sent       ir al estado 14
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 1

   44 left: ID .

    $default  reduce usando la regla 44 (left)


estado 2

    8 flowcontr: IF . conds LL_ABR bloq LL_CRR ELSE LL_ABR bloq LL_CRR
    9          | IF . conds LL_ABR bloq LL_CRR

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 21
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    NOT        desplazar e ir al estado 25
    LEN        desplazar e ir al estado 26

    conds      ir al estado 27
    cond       ir al estado 28
    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 34


estado 3

   10 flowcontr: WHILE . conds LL_ABR bloq LL_CRR

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 21
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    NOT        desplazar e ir al estado 25
    LEN        desplazar e ir al estado 26

    conds      ir al estado 35
    cond       ir al estado 28
    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 34


estado 4

   30 decl: VAR . lista_ids AS CR_ABR tipos CR_CRR

    CR_ABR  desplazar e ir al estado 36

    lista_ids  ir al estado 37


estado 5

   28 endstmt: END_STMT .

    $default  reduce usando la regla 28 (endstmt)


estado 6

   29 endstmt: NL .

    $default  reduce usando la regla 29 (endstmt)


estado 7

   68 iostmt: GET . ID

    ID  desplazar e ir al estado 38


estado 8

   67 iostmt: PRINT . operando

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 39
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    LEN        desplazar e ir al estado 26

    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 40


estado 9

   31 decl: CONST_NOMBRE . ID ASIGN CONST_INT
   32     | CONST_NOMBRE . ID ASIGN CONST_R
   33     | CONST_NOMBRE . ID ASIGN STR

    ID  desplazar e ir al estado 41


estado 10

    0 $accept: prg_ . $end

    $end  desplazar e ir al estado 42


estado 11

    1 prg_: prg .
    3 prg: prg . bloq

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    $default  reduce usando la regla 1 (prg_)

    bloq       ir al estado 43
    flowcontr  ir al estado 13
    sent       ir al estado 14
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 12

    2 prg: bloq .
    6 bloq: bloq . flowcontr
    7     | bloq . sent

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    ID            [reduce usando la regla 2 (prg)]
    IF            [reduce usando la regla 2 (prg)]
    WHILE         [reduce usando la regla 2 (prg)]
    VAR           [reduce usando la regla 2 (prg)]
    END_STMT      [reduce usando la regla 2 (prg)]
    NL            [reduce usando la regla 2 (prg)]
    GET           [reduce usando la regla 2 (prg)]
    PRINT         [reduce usando la regla 2 (prg)]
    CONST_NOMBRE  [reduce usando la regla 2 (prg)]
    $default      reduce usando la regla 2 (prg)

    flowcontr  ir al estado 44
    sent       ir al estado 45
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 13

    4 bloq: flowcontr .

    $default  reduce usando la regla 4 (bloq)


estado 14

    5 bloq: sent .

    $default  reduce usando la regla 5 (bloq)


estado 15

   27 sent: endstmt .

    $default  reduce usando la regla 27 (sent)


estado 16

   24 sent: decl . endstmt

    END_STMT  desplazar e ir al estado 5
    NL        desplazar e ir al estado 6

    endstmt  ir al estado 46


estado 17

   25 sent: assg . endstmt

    END_STMT  desplazar e ir al estado 5
    NL        desplazar e ir al estado 6

    endstmt  ir al estado 47


estado 18

   42 assg: left . ASIGN assg
   43     | left . ASIGN right

    ASIGN  desplazar e ir al estado 48


estado 19

   26 sent: iostmt . endstmt

    END_STMT  desplazar e ir al estado 5
    NL        desplazar e ir al estado 6

    endstmt  ir al estado 49


estado 20

   52 termino: ID .

    $default  reduce usando la regla 52 (termino)


estado 21

   16 cond: PR_ABR . cond PR_CRR
   50 termino: PR_ABR . expr PR_CRR

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 21
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    NOT        desplazar e ir al estado 25
    LEN        desplazar e ir al estado 26

    cond       ir al estado 50
    str_const  ir al estado 29
    expr       ir al estado 51
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 34


estado 22

   55 const_num: CONST_INT .

    $default  reduce usando la regla 55 (const_num)


estado 23

   54 const_num: CONST_R .

    $default  reduce usando la regla 54 (const_num)


estado 24

   47 str_const: STR .

    $default  reduce usando la regla 47 (str_const)


estado 25

   15 cond: NOT . cond

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 21
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    NOT        desplazar e ir al estado 25
    LEN        desplazar e ir al estado 26

    cond       ir al estado 52
    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 34


estado 26

   60 llong: LEN . PR_ABR lista_ids PR_CRR
   61      | LEN . PR_ABR lista_const PR_CRR

    PR_ABR  desplazar e ir al estado 53


estado 27

    8 flowcontr: IF conds . LL_ABR bloq LL_CRR ELSE LL_ABR bloq LL_CRR
    9          | IF conds . LL_ABR bloq LL_CRR
   12 conds: conds . unionlog cond

    LL_ABR  desplazar e ir al estado 54
    AND     desplazar e ir al estado 55
    OR      desplazar e ir al estado 56

    unionlog  ir al estado 57


estado 28

   11 conds: cond .

    $default  reduce usando la regla 11 (conds)


estado 29

   70 operando: str_const .

    $default  reduce usando la regla 70 (operando)


estado 30

   48 expr: expr . arth_opr termino
   69 operando: expr .

    SUM   desplazar e ir al estado 58
    MIN   desplazar e ir al estado 59
    DIV   desplazar e ir al estado 60
    MULT  desplazar e ir al estado 61

    $default  reduce usando la regla 69 (operando)

    arth_opr  ir al estado 62


estado 31

   49 expr: termino .

    $default  reduce usando la regla 49 (expr)


estado 32

   53 termino: const_num .

    $default  reduce usando la regla 53 (termino)


estado 33

   51 termino: llong .

    $default  reduce usando la regla 51 (termino)


estado 34

   17 cond: operando . oplog operando

    EQ   desplazar e ir al estado 63
    NEQ  desplazar e ir al estado 64
    LT   desplazar e ir al estado 65
    LEQ  desplazar e ir al estado 66
    GT   desplazar e ir al estado 67
    GEQ  desplazar e ir al estado 68

    oplog  ir al estado 69


estado 35

   10 flowcontr: WHILE conds . LL_ABR bloq LL_CRR
   12 conds: conds . unionlog cond

    LL_ABR  desplazar e ir al estado 70
    AND     desplazar e ir al estado 55
    OR      desplazar e ir al estado 56

    unionlog  ir al estado 57


estado 36

   34 lista_ids: CR_ABR . ids CR_CRR

    ID  desplazar e ir al estado 71

    ids  ir al estado 72


estado 37

   30 decl: VAR lista_ids . AS CR_ABR tipos CR_CRR

    AS  desplazar e ir al estado 73


estado 38

   68 iostmt: GET ID .

    $default  reduce usando la regla 68 (iostmt)


estado 39

   50 termino: PR_ABR . expr PR_CRR

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 39
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    LEN        desplazar e ir al estado 26

    expr       ir al estado 74
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33


estado 40

   67 iostmt: PRINT operando .

    $default  reduce usando la regla 67 (iostmt)


estado 41

   31 decl: CONST_NOMBRE ID . ASIGN CONST_INT
   32     | CONST_NOMBRE ID . ASIGN CONST_R
   33     | CONST_NOMBRE ID . ASIGN STR

    ASIGN  desplazar e ir al estado 75


estado 42

    0 $accept: prg_ $end .

    $default  aceptar


estado 43

    3 prg: prg bloq .
    6 bloq: bloq . flowcontr
    7     | bloq . sent

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    ID            [reduce usando la regla 3 (prg)]
    IF            [reduce usando la regla 3 (prg)]
    WHILE         [reduce usando la regla 3 (prg)]
    VAR           [reduce usando la regla 3 (prg)]
    END_STMT      [reduce usando la regla 3 (prg)]
    NL            [reduce usando la regla 3 (prg)]
    GET           [reduce usando la regla 3 (prg)]
    PRINT         [reduce usando la regla 3 (prg)]
    CONST_NOMBRE  [reduce usando la regla 3 (prg)]
    $default      reduce usando la regla 3 (prg)

    flowcontr  ir al estado 44
    sent       ir al estado 45
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 44

    6 bloq: bloq flowcontr .

    $default  reduce usando la regla 6 (bloq)


estado 45

    7 bloq: bloq sent .

    $default  reduce usando la regla 7 (bloq)


estado 46

   24 sent: decl endstmt .

    $default  reduce usando la regla 24 (sent)


estado 47

   25 sent: assg endstmt .

    $default  reduce usando la regla 25 (sent)


estado 48

   42 assg: left ASIGN . assg
   43     | left ASIGN . right

    ID         desplazar e ir al estado 76
    PR_ABR     desplazar e ir al estado 39
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    LEN        desplazar e ir al estado 26

    assg       ir al estado 77
    left       ir al estado 18
    right      ir al estado 78
    str_const  ir al estado 79
    expr       ir al estado 80
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33


estado 49

   26 sent: iostmt endstmt .

    $default  reduce usando la regla 26 (sent)


estado 50

   16 cond: PR_ABR cond . PR_CRR

    PR_CRR  desplazar e ir al estado 81


estado 51

   48 expr: expr . arth_opr termino
   50 termino: PR_ABR expr . PR_CRR
   69 operando: expr .

    PR_CRR  desplazar e ir al estado 82
    SUM     desplazar e ir al estado 58
    MIN     desplazar e ir al estado 59
    DIV     desplazar e ir al estado 60
    MULT    desplazar e ir al estado 61

    $default  reduce usando la regla 69 (operando)

    arth_opr  ir al estado 62


estado 52

   15 cond: NOT cond .

    $default  reduce usando la regla 15 (cond)


estado 53

   60 llong: LEN PR_ABR . lista_ids PR_CRR
   61      | LEN PR_ABR . lista_const PR_CRR

    CR_ABR  desplazar e ir al estado 83

    lista_ids    ir al estado 84
    lista_const  ir al estado 85


estado 54

    8 flowcontr: IF conds LL_ABR . bloq LL_CRR ELSE LL_ABR bloq LL_CRR
    9          | IF conds LL_ABR . bloq LL_CRR

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    bloq       ir al estado 86
    flowcontr  ir al estado 13
    sent       ir al estado 14
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 55

   13 unionlog: AND .

    $default  reduce usando la regla 13 (unionlog)


estado 56

   14 unionlog: OR .

    $default  reduce usando la regla 14 (unionlog)


estado 57

   12 conds: conds unionlog . cond

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 21
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    NOT        desplazar e ir al estado 25
    LEN        desplazar e ir al estado 26

    cond       ir al estado 87
    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 34


estado 58

   56 arth_opr: SUM .

    $default  reduce usando la regla 56 (arth_opr)


estado 59

   57 arth_opr: MIN .

    $default  reduce usando la regla 57 (arth_opr)


estado 60

   59 arth_opr: DIV .

    $default  reduce usando la regla 59 (arth_opr)


estado 61

   58 arth_opr: MULT .

    $default  reduce usando la regla 58 (arth_opr)


estado 62

   48 expr: expr arth_opr . termino

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 39
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    LEN        desplazar e ir al estado 26

    termino    ir al estado 88
    const_num  ir al estado 32
    llong      ir al estado 33


estado 63

   18 oplog: EQ .

    $default  reduce usando la regla 18 (oplog)


estado 64

   19 oplog: NEQ .

    $default  reduce usando la regla 19 (oplog)


estado 65

   20 oplog: LT .

    $default  reduce usando la regla 20 (oplog)


estado 66

   21 oplog: LEQ .

    $default  reduce usando la regla 21 (oplog)


estado 67

   22 oplog: GT .

    $default  reduce usando la regla 22 (oplog)


estado 68

   23 oplog: GEQ .

    $default  reduce usando la regla 23 (oplog)


estado 69

   17 cond: operando oplog . operando

    ID         desplazar e ir al estado 20
    PR_ABR     desplazar e ir al estado 39
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24
    LEN        desplazar e ir al estado 26

    str_const  ir al estado 29
    expr       ir al estado 30
    termino    ir al estado 31
    const_num  ir al estado 32
    llong      ir al estado 33
    operando   ir al estado 89


estado 70

   10 flowcontr: WHILE conds LL_ABR . bloq LL_CRR

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    bloq       ir al estado 90
    flowcontr  ir al estado 13
    sent       ir al estado 14
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 71

   35 ids: ID .

    $default  reduce usando la regla 35 (ids)


estado 72

   34 lista_ids: CR_ABR ids . CR_CRR
   36 ids: ids . COMA ID

    CR_CRR  desplazar e ir al estado 91
    COMA    desplazar e ir al estado 92


estado 73

   30 decl: VAR lista_ids AS . CR_ABR tipos CR_CRR

    CR_ABR  desplazar e ir al estado 93


estado 74

   48 expr: expr . arth_opr termino
   50 termino: PR_ABR expr . PR_CRR

    PR_CRR  desplazar e ir al estado 82
    SUM     desplazar e ir al estado 58
    MIN     desplazar e ir al estado 59
    DIV     desplazar e ir al estado 60
    MULT    desplazar e ir al estado 61

    arth_opr  ir al estado 62


estado 75

   31 decl: CONST_NOMBRE ID ASIGN . CONST_INT
   32     | CONST_NOMBRE ID ASIGN . CONST_R
   33     | CONST_NOMBRE ID ASIGN . STR

    CONST_INT  desplazar e ir al estado 94
    CONST_R    desplazar e ir al estado 95
    STR        desplazar e ir al estado 96


estado 76

   44 left: ID .
   52 termino: ID .

    ASIGN     reduce usando la regla 44 (left)
    $default  reduce usando la regla 52 (termino)


estado 77

   42 assg: left ASIGN assg .

    $default  reduce usando la regla 42 (assg)


estado 78

   43 assg: left ASIGN right .

    $default  reduce usando la regla 43 (assg)


estado 79

   46 right: str_const .

    $default  reduce usando la regla 46 (right)


estado 80

   45 right: expr .
   48 expr: expr . arth_opr termino

    SUM   desplazar e ir al estado 58
    MIN   desplazar e ir al estado 59
    DIV   desplazar e ir al estado 60
    MULT  desplazar e ir al estado 61

    $default  reduce usando la regla 45 (right)

    arth_opr  ir al estado 62


estado 81

   16 cond: PR_ABR cond PR_CRR .

    $default  reduce usando la regla 16 (cond)


estado 82

   50 termino: PR_ABR expr PR_CRR .

    $default  reduce usando la regla 50 (termino)


estado 83

   34 lista_ids: CR_ABR . ids CR_CRR
   62 lista_const: CR_ABR . constantes CR_CRR

    ID         desplazar e ir al estado 71
    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24

    ids         ir al estado 72
    str_const   ir al estado 97
    const_num   ir al estado 98
    constantes  ir al estado 99
    constante   ir al estado 100


estado 84

   60 llong: LEN PR_ABR lista_ids . PR_CRR

    PR_CRR  desplazar e ir al estado 101


estado 85

   61 llong: LEN PR_ABR lista_const . PR_CRR

    PR_CRR  desplazar e ir al estado 102


estado 86

    6 bloq: bloq . flowcontr
    7     | bloq . sent
    8 flowcontr: IF conds LL_ABR bloq . LL_CRR ELSE LL_ABR bloq LL_CRR
    9          | IF conds LL_ABR bloq . LL_CRR

    ID            desplazar e ir al estado 1
    LL_CRR        desplazar e ir al estado 103
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    flowcontr  ir al estado 44
    sent       ir al estado 45
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 87

   12 conds: conds unionlog cond .

    $default  reduce usando la regla 12 (conds)


estado 88

   48 expr: expr arth_opr termino .

    $default  reduce usando la regla 48 (expr)


estado 89

   17 cond: operando oplog operando .

    $default  reduce usando la regla 17 (cond)


estado 90

    6 bloq: bloq . flowcontr
    7     | bloq . sent
   10 flowcontr: WHILE conds LL_ABR bloq . LL_CRR

    ID            desplazar e ir al estado 1
    LL_CRR        desplazar e ir al estado 104
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    flowcontr  ir al estado 44
    sent       ir al estado 45
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 91

   34 lista_ids: CR_ABR ids CR_CRR .

    $default  reduce usando la regla 34 (lista_ids)


estado 92

   36 ids: ids COMA . ID

    ID  desplazar e ir al estado 105


estado 93

   30 decl: VAR lista_ids AS CR_ABR . tipos CR_CRR

    INT       desplazar e ir al estado 106
    REAL      desplazar e ir al estado 107
    STRING_T  desplazar e ir al estado 108

    tipos  ir al estado 109
    tipo   ir al estado 110


estado 94

   31 decl: CONST_NOMBRE ID ASIGN CONST_INT .

    $default  reduce usando la regla 31 (decl)


estado 95

   32 decl: CONST_NOMBRE ID ASIGN CONST_R .

    $default  reduce usando la regla 32 (decl)


estado 96

   33 decl: CONST_NOMBRE ID ASIGN STR .

    $default  reduce usando la regla 33 (decl)


estado 97

   66 constante: str_const .

    $default  reduce usando la regla 66 (constante)


estado 98

   65 constante: const_num .

    $default  reduce usando la regla 65 (constante)


estado 99

   62 lista_const: CR_ABR constantes . CR_CRR
   64 constantes: constantes . COMA constante

    CR_CRR  desplazar e ir al estado 111
    COMA    desplazar e ir al estado 112


estado 100

   63 constantes: constante .

    $default  reduce usando la regla 63 (constantes)


estado 101

   60 llong: LEN PR_ABR lista_ids PR_CRR .

    $default  reduce usando la regla 60 (llong)


estado 102

   61 llong: LEN PR_ABR lista_const PR_CRR .

    $default  reduce usando la regla 61 (llong)


estado 103

    8 flowcontr: IF conds LL_ABR bloq LL_CRR . ELSE LL_ABR bloq LL_CRR
    9          | IF conds LL_ABR bloq LL_CRR .

    ELSE  desplazar e ir al estado 113

    $default  reduce usando la regla 9 (flowcontr)


estado 104

   10 flowcontr: WHILE conds LL_ABR bloq LL_CRR .

    $default  reduce usando la regla 10 (flowcontr)


estado 105

   36 ids: ids COMA ID .

    $default  reduce usando la regla 36 (ids)


estado 106

   41 tipo: INT .

    $default  reduce usando la regla 41 (tipo)


estado 107

   39 tipo: REAL .

    $default  reduce usando la regla 39 (tipo)


estado 108

   40 tipo: STRING_T .

    $default  reduce usando la regla 40 (tipo)


estado 109

   30 decl: VAR lista_ids AS CR_ABR tipos . CR_CRR
   38 tipos: tipos . COMA tipo

    CR_CRR  desplazar e ir al estado 114
    COMA    desplazar e ir al estado 115


estado 110

   37 tipos: tipo .

    $default  reduce usando la regla 37 (tipos)


estado 111

   62 lista_const: CR_ABR constantes CR_CRR .

    $default  reduce usando la regla 62 (lista_const)


estado 112

   64 constantes: constantes COMA . constante

    CONST_INT  desplazar e ir al estado 22
    CONST_R    desplazar e ir al estado 23
    STR        desplazar e ir al estado 24

    str_const  ir al estado 97
    const_num  ir al estado 98
    constante  ir al estado 116


estado 113

    8 flowcontr: IF conds LL_ABR bloq LL_CRR ELSE . LL_ABR bloq LL_CRR

    LL_ABR  desplazar e ir al estado 117


estado 114

   30 decl: VAR lista_ids AS CR_ABR tipos CR_CRR .

    $default  reduce usando la regla 30 (decl)


estado 115

   38 tipos: tipos COMA . tipo

    INT       desplazar e ir al estado 106
    REAL      desplazar e ir al estado 107
    STRING_T  desplazar e ir al estado 108

    tipo  ir al estado 118


estado 116

   64 constantes: constantes COMA constante .

    $default  reduce usando la regla 64 (constantes)


estado 117

    8 flowcontr: IF conds LL_ABR bloq LL_CRR ELSE LL_ABR . bloq LL_CRR

    ID            desplazar e ir al estado 1
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    bloq       ir al estado 119
    flowcontr  ir al estado 13
    sent       ir al estado 14
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 118

   38 tipos: tipos COMA tipo .

    $default  reduce usando la regla 38 (tipos)


estado 119

    6 bloq: bloq . flowcontr
    7     | bloq . sent
    8 flowcontr: IF conds LL_ABR bloq LL_CRR ELSE LL_ABR bloq . LL_CRR

    ID            desplazar e ir al estado 1
    LL_CRR        desplazar e ir al estado 120
    IF            desplazar e ir al estado 2
    WHILE         desplazar e ir al estado 3
    VAR           desplazar e ir al estado 4
    END_STMT      desplazar e ir al estado 5
    NL            desplazar e ir al estado 6
    GET           desplazar e ir al estado 7
    PRINT         desplazar e ir al estado 8
    CONST_NOMBRE  desplazar e ir al estado 9

    flowcontr  ir al estado 44
    sent       ir al estado 45
    endstmt    ir al estado 15
    decl       ir al estado 16
    assg       ir al estado 17
    left       ir al estado 18
    iostmt     ir al estado 19


estado 120

    8 flowcontr: IF conds LL_ABR bloq LL_CRR ELSE LL_ABR bloq LL_CRR .

    $default  reduce usando la regla 8 (flowcontr)
